package templates

const ClientConnTemplate = `// Code generated by protoc-gen-connection; DO NOT EDIT.
package {{ .PackageName }}

import (
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"
	"google.golang.org/grpc/keepalive"
	"time"
)

var defaultUnaryInterceptor = []grpc.UnaryClientInterceptor{}

func SetUnaryInterceptor(a []grpc.UnaryClientInterceptor) {
	defaultUnaryInterceptor = a
}

func AddUnaryInterceptor(i grpc.UnaryClientInterceptor) {
	defaultUnaryInterceptor = append(defaultUnaryInterceptor, i)
}

type clientConn struct {
{{- range .Services }}
	{{ .Name | ToLower }} *grpc.ClientConn
{{- end }}
}

func (s *Service) createClientConn() {
{{- range .Services }}
	s.create{{ .Name }}ClientConn()
{{- end }}
}

func (s *Service) Close() {
{{- range .Services }}
	s.conn.{{ .Name | ToLower }}.Close()
{{- end }}
}

{{- range .Services }}

func (s *Service) create{{ .Name }}ClientConn(opts ...grpc.DialOption) {

	opts2 := []grpc.DialOption {
		grpc.WithTransportCredentials(insecure.NewCredentials()),
		grpc.WithChainUnaryInterceptor(defaultUnaryInterceptor...),
		grpc.WithKeepaliveParams(keepalive.ClientParameters{
			Time:                10 * time.Second,
			PermitWithoutStream: true,
		}),
	}
	opts2 = append(opts2, opts...)

	conn, err := grpc.Dial({{ .Target }}, opts2...)
	if err != nil {
		panic(err)
	}

	s.conn.{{ .Name | ToLower }} = conn
}
{{- end }}
`
